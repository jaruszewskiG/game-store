@use 'variables' as *;

// Responsive breakpoints
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: $breakpoint-xs) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (max-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: $breakpoint-xl) {
      @content;
    }
  }
}

// Typography mixins
@mixin text-base {
  font-family: $font-family;
  font-size: $font-size-base;
  line-height: $line-height-base;
  letter-spacing: 0;
}

@mixin text-semibold {
  @include text-base;
  font-weight: $font-weight-semibold;
}

@mixin text-bold {
  @include text-base;
  font-weight: $font-weight-bold;
}

@mixin text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  word-break: break-word;
}

// Button mixins
@mixin button-reset {
  padding: 0;
  border: none;
  background: transparent;
  cursor: pointer;
  font: inherit;
}

@mixin button-base {
  @include button-reset;
  transition: all $transition-slow;

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
}

@mixin button-hover-lift {
  &:hover:not(:disabled) {
    transform: translateY(-1px);
  }

  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

// Border & Shadow
@mixin border-standard {
  border: $border-width solid $color-border;
  border-radius: $border-radius-sm;
}

@mixin dropdown-shadow {
  box-shadow: $box-shadow-md;
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// Positioning
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-overlay {
  position: fixed;
  inset: 0;
}

// Transitions
@mixin fade-transition {
  opacity: 0;
  pointer-events: none;
  transition: opacity $transition-base;

  &--visible {
    opacity: 1;
    pointer-events: auto;
  }
}

// Touch targets for mobile
@mixin touch-target {
  @include respond-to(sm) {
    & {
      min-height: $touch-target-min;
    }
  }
}

// Show on hover (with mobile support)
@mixin show-on-hover {
  opacity: 0;
  pointer-events: none;
  transition: opacity $transition-fast;

  @media (hover: none) {
    & {
      opacity: 1;
      pointer-events: auto;
    }
  }
}

// Aspect ratio (fallback for older browsers)
@mixin aspect-ratio($width, $height) {
  aspect-ratio: #{$width} / #{$height};
}

// Focus styles for accessibility
@mixin focus-visible {
  &:focus-visible {
    outline: 3px solid $color-primary;
    outline-offset: 2px;
  }

  &:focus:not(:focus-visible) {
    outline: none;
  }
}

@mixin focus-within {
  &:focus-within {
    outline: 2px solid $color-primary;
    outline-offset: 2px;
  }
}
